//
    // " - "  subtraction opertor
    public (int  c1, int  c2)
        {
            
            temp.real = c1.real - c2.real;
            temp.img = c1.img - c2.img;
            return temp;
        }

//
// " / " Divison opertor overloading
public (int  c1, int  c2)
{
    
    //if ((c2.real & c2.img) == 0){
    temp.real = c1.real / c2.real;
    temp.img = c1.img / c2.img;
    return temp;
    //}
    //else{ throw error}

}

//
// " * " opertor
public (int  c1, int  c2)
{
    
    //if (c1.real|c2.real|c2.img|c2.img !=0){
    temp.real = c1.real * c2.real;
    temp.img = c1.img * c2.img;
    return temp;
    //}
    /* else{
    
    
    
        /*  
        try{
        }
        catch{
        }

        */
        int  c1 = new int (3, 7);

        int  c2 = new int (5, 2);

        int  c4 = c1 + c2;
        c4.Display();
        int  c5 = c1 - c2;
        c5.Display();
        int  c6 = c1 * c2;
        c6.Display();
        int  c7 = c1 / c2;
        c7.Display();

        temp.real=0;
        temp.img=0;
    } */

}


//Sic Mundus Creatus Est
using System;
namespace exp_4main
{
    delegate void matrix(int[,] arr1, int[,] arr2, int n);
    class dele
    {
        int[,] arr1, arr2;
        int n;
        public event matrix MyEvent;
        public dele()
        {
            arr1 = new int[50,50];
            arr2 = new int[50,50];
            n = 0;
        }
        public void sum(int[,] arr1, int[,] arr2, int n)
        {
            /* calculate the Sum of the matrix */
            int i, j;
            int[,] crr1 = new int[50, 50];
            for (i = 0; i < n; i++)
            {
                for (j = 0; j < n; j++)
                {
                    crr1[i, j] = arr1[i, j] + arr2[i, j];
                }
            }
            Console.WriteLine("\nThe Addition of two matrix is : \n");
            for (i = 0; i < n; i++)
            {
                Console.Write("\n");
                for (j = 0; j < n; j++)
                {
                    Console.Write("{0}\t", crr1[i, j]);
                }
            }
            Console.Write("\n");
        }
        public void sub(int[,] arr1, int[,] arr2, int n)
        {
            /* calculate the Difference of the matrix */
            int i, j;
            int[,] crr1 = new int[50, 50];
            for (i = 0; i < n; i++)
            {
                for (j = 0; j < n; j++)
                {
                    crr1[i, j] = arr1[i, j] - arr2[i, j];
                }
            }
            Console.WriteLine("\nThe Difference of two matrix is : \n");
            for (i = 0; i < n; i++)
            {
                Console.Write("\n");
                for (j = 0; j < n; j++)
                {
                    Console.Write("{0}\t", crr1[i, j]);
                }
            }
            Console.Write("\n");
        }
        public void mul(int[,] arr1, int[,] arr2, int n)
        {
            /* calculate the Product of the matrix */
            //"Product is undefined. n columns of first matrix must equal to n rows of second matrix"
            int i, j, k;
            int[,] crr1 = new int[50, 50];
            // looping through matrix 1 rows 
            for (i = 0; i < n; i++)
            {
                // for each matrix 1 row, loop through matrix 2 columns
                for (j = 0; j < n; j++)
                {
                    // loop through matrix 1 columns to calculate the dot product
                    for (k = 0; k < n; k++)
                    {
                        crr1[i, j] += arr1[i, k] * arr2[k, j];
                    }
                }
            }
            Console.WriteLine("\nThe Product of two matrix is : \n");
            for (i = 0; i < n; i++)
            {
                Console.Write("\n");
                for (j = 0; j < n; j++)
                {
                    Console.Write("{0}\t", crr1[i, j]);
                }
            }
            Console.Write("\n");
        }
    }
    class Program
    {
        static void Main(string[] args)
        {
            dele d = new dele(); //instance creation
            int[,] arr1 = new int[50, 50];
            int[,] arr2 = new int[50, 50];

            int i, j, n;
            Console.Write("Input the size of the square matrix (less than 5): ");
            n = Convert.ToInt32(Console.ReadLine());

            //Stored values into the array 
            Console.Write("Input elements in the first matrix :\n");
            for (i = 0; i < n; i++)
            {
                for (j = 0; j < n; j++)
                {
                    Console.Write("element - [{0},{1}] : ", i, j);
                    arr1[i, j] = Convert.ToInt32(Console.ReadLine());
                }
            }
            Console.Write("Input elements in the second matrix :\n");
            for (i = 0; i < n; i++)
            {
                for (j = 0; j < n; j++)
                {
                    Console.Write("element - [{0},{1}] : ", i, j);
                    arr2[i, j] = Convert.ToInt32(Console.ReadLine());
                }
            }
            d.MyEvent += new matrix(d.sum);
            d.MyEvent(arr1, arr2, n);
            d.sub(arr1, arr2, n);
            d.mul(arr1, arr2, n);

            Console.ReadKey();

        }

    }
}


